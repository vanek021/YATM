@using YATM.Components.Shared
@inherits LayoutComponentBase

@inject AuthenticationStateProvider authenticationStateProvider
@inject NavigationManager navManager

<PageTitle>YATM</PageTitle>

<Layout>
    <header Class="header">
        <div class="content">
            <div class="logo" />
            <div class="header__menu">
                <div class="navigation @NavMenuCssClass" @onclick="ToggleNavMenu">
                    <nav class="menu">
                        <NavLink class="menu__item" href="" Match="NavLinkMatch.All">
                            Доски
                        </NavLink>
                        <NavLink class="menu__item" href="notes">
                            Заметки
                        </NavLink>
                        <NavLink class="menu__item" href="health">
                            Здоровье
                        </NavLink>
                        <SimpleTimer />
                    </nav>
                </div>

                <div class="hamburger" @onclick="ToggleNavMenu">
                    <div class="svg-icon icon-hamburger">
                        <div style="color: white;">
                            <Icon Width="26px" Height="26px" Type="menu" Theme="outline" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <Content Class="content" Style="overflow: auto;">
        <div class="site-layout-content">@Body</div>
    </Content>
    <Footer Class="footer">YATM - Yet Another Task Manager - Еще один менеджер задач!</Footer>
</Layout>

<style>
    .logo {
        width: 32px;
        height: 32px;
        background: url("favicon.png");
        margin: 16px 24px 16px 0;
        float: left;
    }
</style>

@code {

    private bool _collapseNavMenu = true;

    private string? NavMenuCssClass => _collapseNavMenu ? "collapse" : "menu-open";

    protected override async Task OnInitializedAsync()
    {
        var authState = await authenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity is null || !user.Identity.IsAuthenticated)
            navManager.NavigateTo("/Identity/Account/Login");
        await base.OnInitializedAsync();
    }

    private void ToggleNavMenu()
    {
        _collapseNavMenu = !_collapseNavMenu;
    }
}