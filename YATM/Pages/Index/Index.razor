@page "/"
@page "/{Id:long}"

@using YATM.BlazorModels.Boards;
@using YATM.Factories;
@using YATM.Models.Constants;
@using YATM.Services;

@attribute [Authorize]

@inject DatabaseFactory dbFactory

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

@foreach (var board in Boards)
{
    <h2>@board.Name</h2>
}

@code {
    [Parameter]
    public long? Id { get; set; }

    public List<BoardBlazorModel> Boards { get; set; } = new();
    public BoardBlazorModel? ActiveBoard { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var db = dbFactory.Create();
        var boardService = db.GetService<BoardService>();

        Boards = await boardService.GetBoardBlazorModelsAsync();

        if (Id.HasValue)
            ActiveBoard = await boardService.GetBoardBlazorModelByIdAsync(Id.Value);
        else
            ActiveBoard = await boardService.GetBoardBlazorModelByNameAsync(BoardConstants.MainBoard);

        await base.OnInitializedAsync();
    }
}